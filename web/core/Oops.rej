@@ -53,9 +53,6 @@
       ->onlyMethods(['doMail'])
       ->getMock();
 
-    $mailer->expects($this->once())->method('doMail')
-      ->willReturn(TRUE);
-
     return $mailer;
   }
 
@@ -76,20 +73,44 @@
       'langcode' => 'en',
       'params' => [],
       'send' => TRUE,
-      'subject' => '',
+      'subject' => "test\r\nsubject",
       'body' => '',
       'headers' => [
         'MIME-Version' => '1.0',
         'Content-Type' => 'text/plain; charset=UTF-8; format=flowed; delsp=yes',
         'Content-Transfer-Encoding' => '8Bit',
         'X-Mailer' => 'Drupal',
-        'Return-Path' => 'from@example.org',
         'From' => '"Foo, Bar, and Baz" <from@example.org>',
         'Reply-to' => 'from@example.org',
+        'Return-Path' => 'from@example.org',
       ],
     ];
 
     $mailer = $this->createPhpMailInstance();
+
+    // Verify we use line endings consistent with the PHP mail() function, which
+    // changed with PHP 8. See:
+    // - https://www.drupal.org/node/3270647
+    // - https://bugs.php.net/bug.php?id=81158
+    // Since Drupal 10+ does not support PHP < 8, the PHP version check in the next line can be removed in Drupal 10+.
+    $line_end = PHP_MAJOR_VERSION < 8 ? "\n" : "\r\n";
+
+    $expected_headers = "MIME-Version: 1.0$line_end";
+    $expected_headers .= "Content-Type: text/plain; charset=UTF-8; format=flowed; delsp=yes$line_end";
+    $expected_headers .= "Content-Transfer-Encoding: 8Bit$line_end";
+    $expected_headers .= "X-Mailer: Drupal$line_end";
+    $expected_headers .= "From: \"Foo, Bar, and Baz\" <from@example.org>$line_end";
+    $expected_headers .= "Reply-to: from@example.org$line_end";
+
+    $mailer->expects($this->once())->method('doMail')
+      ->with(
+        $this->equalTo('to@example.org'),
+        $this->equalTo("=?utf-8?Q?test?={$line_end} =?utf-8?Q?subject?="),
+        $this->equalTo(''),
+        $this->stringStartsWith($expected_headers),
+      )
+      ->willReturn(TRUE);
+
     $this->assertTrue($mailer->mail($message));
   }
 
